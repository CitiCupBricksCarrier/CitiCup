package com.citicup.dao;

import static org.apache.ibatis.jdbc.SqlBuilder.BEGIN;
import static org.apache.ibatis.jdbc.SqlBuilder.INSERT_INTO;
import static org.apache.ibatis.jdbc.SqlBuilder.SET;
import static org.apache.ibatis.jdbc.SqlBuilder.SQL;
import static org.apache.ibatis.jdbc.SqlBuilder.UPDATE;
import static org.apache.ibatis.jdbc.SqlBuilder.VALUES;
import static org.apache.ibatis.jdbc.SqlBuilder.WHERE;

import com.citicup.model.Point;

public class PointSqlProvider {

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table point
     *
     * @mbggenerated
     */
    public String insertSelective(Point record) {
        BEGIN();
        INSERT_INTO("point");
        
        if (record.getStkcd() != null) {
            VALUES("stkcd", "#{stkcd,jdbcType=VARCHAR}");
        }
        
        if (record.getGraphid() != null) {
            VALUES("graphId", "#{graphid,jdbcType=VARCHAR}");
        }
        
        if (record.getStatus() != null) {
            VALUES("status", "#{status,jdbcType=TINYINT}");
        }
        
        if (record.getDefectprob() != null) {
            VALUES("defectProb", "#{defectprob,jdbcType=DOUBLE}");
        }
        
        if (record.getInfectprob() != null) {
            VALUES("infectProb", "#{infectprob,jdbcType=DOUBLE}");
        }
        
        if (record.getInfectprobtemp() != null) {
            VALUES("infectProbTemp", "#{infectprobtemp,jdbcType=DOUBLE}");
        }
        
        if (record.getInfecttime() != null) {
            VALUES("infectTime", "#{infecttime,jdbcType=INTEGER}");
        }
        
        if (record.getTimeleft() != null) {
            VALUES("timeLeft", "#{timeleft,jdbcType=INTEGER}");
        }
        
        if (record.getColor() != null) {
            VALUES("color", "#{color,jdbcType=VARCHAR}");
        }
        
        if (record.getRole() != null) {
            VALUES("role", "#{role,jdbcType=VARCHAR}");
        }
        
        if (record.getPosx() != null) {
            VALUES("posx", "#{posx,jdbcType=VARCHAR}");
        }
        
        if (record.getPosy() != null) {
            VALUES("posy", "#{posy,jdbcType=VARCHAR}");
        }
        
        if (record.getName() != null) {
            VALUES("name", "#{name,jdbcType=VARCHAR}");
        }
        
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table point
     *
     * @mbggenerated
     */
    public String updateByPrimaryKeySelective(Point record) {
        BEGIN();
        UPDATE("point");
        
        if (record.getStatus() != null) {
            SET("status = #{status,jdbcType=TINYINT}");
        }
        
        if (record.getDefectprob() != null) {
            SET("defectProb = #{defectprob,jdbcType=DOUBLE}");
        }
        
        if (record.getInfectprob() != null) {
            SET("infectProb = #{infectprob,jdbcType=DOUBLE}");
        }
        
        if (record.getInfectprobtemp() != null) {
            SET("infectProbTemp = #{infectprobtemp,jdbcType=DOUBLE}");
        }
        
        if (record.getInfecttime() != null) {
            SET("infectTime = #{infecttime,jdbcType=INTEGER}");
        }
        
        if (record.getTimeleft() != null) {
            SET("timeLeft = #{timeleft,jdbcType=INTEGER}");
        }
        
        if (record.getColor() != null) {
            SET("color = #{color,jdbcType=VARCHAR}");
        }
        
        if (record.getRole() != null) {
            SET("role = #{role,jdbcType=VARCHAR}");
        }
        
        if (record.getPosx() != null) {
            SET("posx = #{posx,jdbcType=VARCHAR}");
        }
        
        if (record.getPosy() != null) {
            SET("posy = #{posy,jdbcType=VARCHAR}");
        }
        
        if (record.getName() != null) {
            SET("name = #{name,jdbcType=VARCHAR}");
        }
        
        WHERE("stkcd = #{stkcd,jdbcType=VARCHAR}");
        WHERE("graphId = #{graphid,jdbcType=VARCHAR}");
        
        return SQL();
    }
}